apiVersion: v1
kind: Namespace
metadata:
  name: openim-infrastructure
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init
  namespace: openim-infrastructure
data:
  init.js: |
    db = db.getSiblingDB("openim_v3");
    if (!db.getUser("openIM")) {
      db.createUser({
        user: "openIM",
        pwd: "openIM123",
        roles: [{role: "readWrite", db: "openim_v3"}]
      });
      print("User created successfully: openIM");
    } else {
      print("User already exists: openIM");
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: openim-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "openIM123"
        - name: MONGO_INITDB_DATABASE
          value: "openim_v3"
        command:
        - mongod
        - --wiredTigerCacheSizeGB
        - "1"
        - --auth
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mongodb-data
        emptyDir: {}
      - name: mongodb-init
        configMap:
          name: mongodb-init
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: openim-infrastructure
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
