apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: openim-infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnamilegacy/kafka:3.5.1
        ports:
        - containerPort: 9092
        - containerPort: 9093
        - containerPort: 9094
        env:
        - name: TZ
          value: "Asia/Shanghai"
        - name: KAFKA_CFG_NODE_ID
          value: "0"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "controller,broker"
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka:9093"
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_NUM_PARTITIONS
          value: "8"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_CFG_LISTENERS
          value: "INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "INTERNAL://kafka:9092,EXTERNAL://kafka:9094"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT"
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: "INTERNAL"
        volumeMounts:
        - name: kafka-data
          mountPath: /bitnami/kafka
      volumes:
      - name: kafka-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: openim-infrastructure
spec:
  selector:
    app: kafka
  ports:
  - port: 9092
    targetPort: 9092
    name: internal
  - port: 9093
    targetPort: 9093
    name: controller
  - port: 9094
    targetPort: 9094
    name: external
