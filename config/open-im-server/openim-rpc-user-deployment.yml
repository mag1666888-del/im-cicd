apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-rpc-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-rpc-server
  template:
    metadata:
      labels:
        app: user-rpc-server
    spec:
      initContainers:
        - name: wait-for-rpc-services
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "等待依赖的 RPC 服务启动..."
              until nslookup msg-rpc-service.default.svc.cluster.local >/dev/null 2>&1; do
                echo "等待 msg-rpc-service..."
                sleep 2
              done
              until nslookup friend-rpc-service.default.svc.cluster.local >/dev/null 2>&1; do
                echo "等待 friend-rpc-service..."
                sleep 2
              done
              until nslookup group-rpc-service.default.svc.cluster.local >/dev/null 2>&1; do
                echo "等待 group-rpc-service..."
                sleep 2
              done
              until nslookup conversation-rpc-service.default.svc.cluster.local >/dev/null 2>&1; do
                echo "等待 conversation-rpc-service..."
                sleep 2
              done
              until nslookup third-rpc-service.default.svc.cluster.local >/dev/null 2>&1; do
                echo "等待 third-rpc-service..."
                sleep 2
              done
              until nslookup push-rpc-service.default.svc.cluster.local >/dev/null 2>&1; do
                echo "等待 push-rpc-service..."
                sleep 2
              done
              echo "所有依赖的 RPC 服务已就绪"
      containers:
        - name: user-rpc-server-container
          image: mag1666888/openim-rpc-user:dev
          env:
            - name: CONFIG_PATH
              value: "/config"
            - name: IMENV_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: openim-redis-secret
                  key: redis-password
            - name: IMENV_MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: openim-mongo-secret
                  key: mongo_openim_username
            - name: IMENV_MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: openim-mongo-secret
                  key: mongo_openim_password
            - name: IMENV_KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: openim-kafka-secret
                  key: kafka-password
          volumeMounts:
            - name: openim-config
              mountPath: "/config"
              readOnly: true
          ports:
            - containerPort: 10320
            - containerPort: 12320
      volumes:
        - name: openim-config
          configMap:
            name: openim-config
